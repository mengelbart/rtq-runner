version: "2.4"

services:
  sim:
    image: martenseemann/quic-network-simulator
    container_name: sim
    hostname: sim
    stdin_open: true
    tty: true
    environment:
      - SCENARIO=$SCENARIO
    cap_add:
      - NET_ADMIN
    expose:
      - "57832"
    networks:
      leftnet:
        ipv4_address: 193.167.0.2
        ipv6_address: fd00:cafe:cafe:0::2
      rightnet:
        ipv4_address: 193.167.100.2
        ipv6_address: fd00:cafe:cafe:100::2

  sender:
    image: $SENDER
    container_name: sender
    hostname: sender
    stdin_open: true
    tty: true
    volumes:
      - ./$INPUT:/input:ro
    environment:
      - ROLE=sender
      - QLOGDIR=/logs/qlog
      - RTPLOGDIR=/logs/rtp
      - CCLOGFILE=/logs/cc.log
      - LOG_FILE=/logs/qrt.log
      - RECEIVER=193.167.0.100:4242
      - VIDEOS=$VIDEOS
    cap_add:
      - NET_ADMIN
    networks:
      rightnet:
        ipv4_address: 193.167.100.100
        ipv6_address: fd00:cafe:cafe:100::100

  receiver:
    image: $RECEIVER
    container_name: receiver
    hostname: receiver
    stdin_open: true
    tty: true
    volumes:
      - $OUTPUT:/streams
    environment:
      - ROLE=receiver
      - QLOGDIR=/logs/qlog
      - RTPLOGDIR=/logs/rtp
      - LOG_FILE=/logs/qrt.log
      - DESTINATION=/streams/out.mkv
    cap_add:
      - NET_ADMIN
    networks:
      leftnet:
        ipv4_address: 193.167.0.100
        ipv6_address: fd00:cafe:cafe:0::100

networks:
  leftnet:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    enable_ipv6: true
    ipam:
      config:
        - subnet: 193.167.0.0/24
        - subnet: fd00:cafe:cafe:0::/64
  rightnet:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    enable_ipv6: true
    ipam:
      config:
        - subnet: 193.167.100.0/24
        - subnet: fd00:cafe:cafe:100::/64

